// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
// Mac mini url
// url      = "postgres://postgres:postgres@localhost:5432/orionDB"
// MacBook pro url
  // url      = "postgres://paulo:123@localhost:5432/orionDB"
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int        @id @default(autoincrement())
  userName  String
  password  String
  email     String     @unique
  name      String
  lastName  String
  createdAt DateTime?  @default(now())
  Client    Client?
  Admin     Admin?
  Publisher Publisher?
}

model Client {
  clientId Int  @id @default(autoincrement())
  userId   Int  @unique
  user     User @relation(fields: [userId], references: [userId])
}

model Admin {
  adminId    Int  @id @default(autoincrement())
  userId     Int  @unique
  user       User @relation(fields: [userId], references: [userId])
  createdAds Ad[]
}

model Publisher {
  publisherId  Int    @id @default(autoincrement())
  userId       Int    @unique
  user         User   @relation(fields: [userId], references: [userId])
  cellphone    String
  photo        String
  AdsPublished Ad[]
}

model Category {
  categoryId Int    @id @default(autoincrement())
  title      String @unique
  Ad         Ad[]
}

model Ad {
  adId         Int       @id @default(autoincrement())
  title        String
  detail       String
  photos       String[]
  keywords     String[]
  creationDate DateTime? @default(now())
  categoryId   Int
  category     Category  @relation(fields: [categoryId], references: [categoryId])
  adminId      Int
  adminCreator Admin     @relation(fields: [adminId], references: [adminId])
  publisherId  Int
  publishedBy  Publisher @relation(fields: [publisherId], references: [publisherId])
}


model SuggestedCategory{
  suggestedCategoryId Int    @id @default(autoincrement())
  title      String @unique
}